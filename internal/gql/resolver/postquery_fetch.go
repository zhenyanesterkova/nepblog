package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.66

import (
	"context"
	"fmt"

	"github.com/zhenyanesterkova/nepblog/internal/gql/model"
	"github.com/zhenyanesterkova/nepblog/internal/gql/runtime"
)

// TotalCount is the resolver for the totalCount field.
func (r *postFetchListResolver) TotalCount(ctx context.Context, obj *model.PostFetchList, estimate uint) (model.TotalCountResolvingResult, error) {
	panic(fmt.Errorf("not implemented: TotalCount - totalCount"))
}

// Fetch is the resolver for the fetch field.
func (r *postQueryResolver) Fetch(ctx context.Context, obj *model.PostQuery, filter *model.PostFetchFilterInput, sort model.PostFetchSortEnum, pageSize uint, pageNumber uint) (model.PostFetchResult, error) {
	panic(fmt.Errorf("not implemented: Fetch - fetch"))
}

// PostFetchList returns runtime.PostFetchListResolver implementation.
func (r *Resolver) PostFetchList() runtime.PostFetchListResolver { return &postFetchListResolver{r} }

type postFetchListResolver struct{ *Resolver }
