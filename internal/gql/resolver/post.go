package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.66

import (
	"context"

	"github.com/zhenyanesterkova/nepblog/internal/app/dataloaders"
	"github.com/zhenyanesterkova/nepblog/internal/feature/comment"
	"github.com/zhenyanesterkova/nepblog/internal/gql/model"
	"github.com/zhenyanesterkova/nepblog/internal/gql/runtime"
)

// Comments is the resolver for the comments field.
func (r *postResolver) Comments(ctx context.Context, obj *model.Post) (model.CommentResolvingResult, error) {
	log := r.Logger.LogrusLog

	dataLoader := ctx.Value(dataloaders.DataLoadersContextKey).(*dataloaders.DataLoaders).CommentLoaderByPostID

	comments, err := dataLoader.Load(comment.LoaderByPostIDKey{PostID: obj.ID})
	if err != nil {
		log.Errorf("comment.LoaderByPostID.Load: %v", err)
		return NewInternalErrorProblem(), nil
	}

	return model.CommentList{
		Items: comment.MapManyToGqlModels(comments),
	}, nil
}

// Post returns runtime.PostResolver implementation.
func (r *Resolver) Post() runtime.PostResolver { return &postResolver{r} }

type postResolver struct{ *Resolver }
